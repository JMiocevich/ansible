# Update environment variables for new sessions
set-option -g update-environment "SSH_CLIENT SSH_CONNECTION SSH_TTY"

# Hook to run setup when new sessions are created
set-hook -g session-created 'if-shell "test -n \"$SSH_CLIENT\"" "run-shell ~/.tmux/ssh-setup.sh"'
set-hook -g session-created 'if-shell "test -z \"$SSH_CLIENT\"" "run-shell ~/.tmux/restore-keys.sh"'

# Detect SSH and run setup
if-shell 'test -n "$SSH_CLIENT"' 'run-shell ~/.tmux/ssh-setup.sh'

# Detect not SSH and restore keys
if-shell 'test -z "$SSH_CLIENT"' 'run-shell ~/.tmux/restore-keys.sh'

bind-key 0 if-shell "tmux list-windows | grep -q '^0:'" \
  "select-window -t 0" \
  "new-window -n 0 -t 0"

bind-key 1 if-shell "tmux list-windows | grep -q '^1:'" \
  "select-window -t 1" \
  "new-window -n 1 -t 1"

bind-key 2 if-shell "tmux list-windows | grep -q '^2:'" \
  "select-window -t 2" \
  "new-window -n 2 -t 2"

bind-key 3 if-shell "tmux list-windows | grep -q '^3:'" \
  "select-window -t 3" \
  "new-window -n 3 -t 3"

set -g mouse on

set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

setw -g clock-mode-colour yellow

setw -g mode-style "fg=black bg=red bold"

set -g pane-border-style "fg=red"
set -g pane-active-border-style "fg=yellow"

set -g status-position bottom
set -g status-justify left
set -g status-style "fg=red"

set -g status-right "#[fg=green]Session: #[fg=yellow]#S"
set -g status-left-length 40

set -g status-right-style "fg=black bg=yellow"
set -g status-right "%Y-%m-%d %H:%M "
set -g status-right-length 50

setw -g window-status-current-style "fg=black bg=red"
setw -g window-status-current-format " #I #W #F "

setw -g window-status-style "fg=red bg=black"
setw -g window-status-format " #I #[fg=white]#W #[fg=yellow]#F "

setw -g window-status-bell-style "fg=yellow bg=red bold"
set -g message-style 'fg=yellow bg=red bold'
# Copy mode: vi keybindings
set-window-option -g mode-keys vi

# Copy to system clipboard (requires xclip or xsel)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"  # Requires xclip
# Or, if you prefer xsel:
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -b"

bind-key p run-shell "tmux paste buffer"
